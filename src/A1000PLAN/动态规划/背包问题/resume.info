常见的背包问题有1、组合问题。2、True、False问题。3、最大最小问题。

我在大神整理的基础上，又做了细分的整理。分为三类。
1、组合问题：
377. 组合总和 Ⅳ
494. 目标和
518. 零钱兑换 II

2、True、False问题：
139. 单词拆分
416. 分割等和子集

3、最大最小问题：
474. 一和零
322. 零钱兑换

组合问题公式
dp[i] += dp[i-num]

True、False问题公式
dp[i] = dp[i] or dp[i-num]

最大最小问题公式
dp[i] = min(dp[i], dp[i-num]+1)或者dp[i] = max(dp[i], dp[i-num]+1)

以上三组公式是解决对应问题的核心公式

----------------------------------------------------------------------------------------------------

1.如果是0-1背包，即数组中的元素不可重复使用，一维数组-倒序：nums放在外循环，target capacity在内循环，且内循环倒序；二维数组-正序/倒序：nums放在外循环，target capacity在内循环，且内循环倒序/倒序
  0-1背包二维数组正序，倒序都可以； 但是如果用一维数组，那么只能倒序
for num in nums:
    for i in range(target, nums-1, -1):

2.如果是完全背包，数组中的元素可重复使用,一维数组-正序：nums放在外循环，target capacity在内循环，且内循环正序。 二维数组-正序：nums放在外循环，target capacity在内循环，且内循环正序。
for num in nums:
    for i in range(nums, target+1):

3.多重背包：如果组合问题需考虑元素之间的顺序，需将target capacity放在外循环，将nums放在内循环。
for i in range(1, target+1):
    for num in nums:

关于内外循环，一般都是横向变量，所以nums放外循环容易理解

https://zhuanlan.zhihu.com/p/345364527    0-1背包

https://zhuanlan.zhihu.com/p/377231783    完全背包


「力扣」上的 0-1 背包问题：
「力扣」第 416 题：分割等和子集（中等）；
「力扣」第 474 题：一和零（中等）；
「力扣」第 494 题：目标和（中等）；
「力扣」第 879 题：盈利计划（困难）；
1049. 最后一块石头的重量 II 1230. 抛掷硬币

「力扣」上的 完全背包问题：
「力扣」第 322 题：零钱兑换（中等）；
「力扣」第 518 题：零钱兑换 II（中等）；
279. 完全平方数
「力扣」第 1449 题：数位成本和为目标值的最大数字（困难）。
