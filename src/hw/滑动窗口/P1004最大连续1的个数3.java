 

package hw.滑动窗口;

/**
 * desc:
 *
 * @author junlin
 * @since 2021/11/30
 **/
public class P1004最大连续1的个数3 {

    /*  90+55
    1.本质上来说，滑窗是双指针，一根指针指向左端点，一根指针指向右端点。
    2.右指针移动可以表示扩张窗口，左指针移动表示缩小窗口。
    3.如果当前元素满足题目要求时，可以挪动右指针尝试更优解，并且更新需要记录的变量（元素，元素个数++等）
    4.如果当前窗口内的元素不满足条件，可以挪动左指针尝试调整，并且更新需要记录的变量（元素，元素个数--等）
    5.通过以上步骤窗口就开始“滑动”起来，在滑动过程中，要记得及时更新答案。一般为求最大或最小。
    个人观点认为，关键点在于找到一个 不满足条件的情况 使得左指针移动，这样可以简化问题。找到不合理的情况并且及时调整是滑动窗口的关键。
    回到题目，这道题是说让我们最多改 K 个 0 找到最多连续的 1。
    显然，当 A[i] == 1 我们扩大窗口。当 A[i] == 0 时 我们仍然有可能继续扩张，只要当前的 改变次数 小于 K 。
    当遇到了太多 0 时，您的改变次数已不足。此时就需要缩小窗口了，缩小前如果左端点是 0，那么祝贺你成功充值一次改变机会，可以继续搞扩张了！希望我的通俗的解释可以让你易懂。
     */
    public static int longestOnes(int[] nums, int k) {
        int n = nums.length;
        int left = 0;
        int right = 0;
        int count = 0;
        int ans = 0;
        while (right < n) {
            // 符合条件
            if (nums[right]==0){
                count++;
            }
            // 不符合条件
            while (count>k){
                if (nums[left]==0){
                    count--;
                }
                left++;
            }
            // 每次符合条件都要记录一下最新值
            ans=Math.max(ans,right-left+1);
            right++;
        }
        return ans;
    }


}
